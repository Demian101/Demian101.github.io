
msgid ""
msgstr ""
"Project-Id-Version: promised land\n"
"POT-Creation-Date: 2023-10-16T22:38:47+08:00\n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: English\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: src/SUMMARY.md:3
#: src/chapter_1.md:3
#, fuzzy
msgid "Chapter 1"
msgstr "Chapter 1"

#: src/chapter_1.md:5
#, fuzzy
msgid ""
"邱奇-图灵（Church-Turing）命题，或者邱奇-图灵论题，是一个关于可计算性的重要理论。它提出了一种概念，即“可计算函数”和“可有效计算”是等价的。换句话说，任何可以在现实世界中通过物理或数学方式完成的计算，都可以在图灵机上进行。"
msgstr ""
"The Church-Turing thesis, or the Church-Turing thesis, is an important "
"theory about computability. It proposes the notion that \"computable "
"function\" and \"efficiently computable\" are equivalent. In other words, "
"any calculation that can be done physically or mathematically in the real "
"world can be done on a Turing machine."

#: src/chapter_1.md:7
#, fuzzy
msgid ""
"这是一个非常强大的观点，因为它基本上是说，图灵机能够模拟任何我们能够想象到的计算过程。这包括所有的计算机程序，因为所有现代的计算机都可以视为图灵机的具体实现。"
msgstr ""
"This is a very powerful idea because it basically says that a Turing machine "
"can simulate any computational process we can imagine. This includes all "
"computer programs, since all modern computers can be considered concrete "
"implementations of Turing machines."

#: src/chapter_1.md:9
#, fuzzy
msgid ""
"a example, "
"假设你有一种棋类游戏的规则，你可以确定任何特定的游戏局面是胜利、失败还是平局。那么，邱奇-图灵命题告诉我们，存在一个图灵机（i.e. a "
"program），它可以接受任何游戏局面作为输入，然后输出这个游戏局面是胜利、失败还是平局。"
msgstr ""
"As an example, suppose you have the rules of a board game and you can "
"determine whether any particular game position is a win, a loss, or a draw. "
"Then, the Church-Turing proposition tells us that there is a Turing machine "
"(i.e. a program) that can accept any game situation as input and then output "
"whether the game situation is victory, defeat, or a draw."

msgid ""
msgstr ""

msgid ""
msgstr ""

msgid ""
msgstr ""

msgid ""
msgstr ""

msgid ""
msgstr ""

msgid ""
msgstr ""

